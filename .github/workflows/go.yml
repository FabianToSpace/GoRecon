name: Go

on:
  push:
    branches: 
      - 'main'
      - 'feat/*'
    tags:
      - '*'
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '>=1.22.1'
    
    - name: Test
      run: go test -v ./... 
      
    - name: Coverage Profile
      run: go test -v ./... -coverprofile=c.out

    - name: Upload coverage to Codacy
      uses: codacy/codacy-coverage-reporter-action@v1
      with:
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        coverage-reports: c.out
        force-coverage-parser: go

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '>=1.22.1'

    - name: Build
      run: go build -v ./...

  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses : docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: uptospace/gorecon
          tags: |
            type=semver,enable=${{ github.ref_type == 'tag' }},pattern={{version}}
            type=semver,enable=${{ github.ref_type == 'tag' }},pattern={{major}}.{{minor}}
            type=semver,enable=${{ github.ref_type == 'tag' }},pattern={{major}}
            type=sha,enable=${{ github.ref_type != 'tag' }},prefix={{branch}}-
            type=raw,enable=${{ github.ref == 'refs/heads/main' }},value=latest,enable={{is_default_branch}}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || github.ref_type == 'tag') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: './docker/Dockerfile'